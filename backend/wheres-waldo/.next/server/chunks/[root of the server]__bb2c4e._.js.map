{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/internal/font/google/inter_59dee874.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"className__inter_59dee874__bbf899b6\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'__Inter_59dee8', '__Inter_Fallback_59dee8'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;;;AACA,MAAM,WAAW;IACb,WAAW,iKAAU,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,iKAAU,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,iKAAU,QAAQ;AAC1C;uCAEe"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n\ttitle: \"Create Next App\",\n\tdescription: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n\tchildren,\n}: Readonly<{\n\tchildren: React.ReactNode;\n}>) {\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<title>Where&apos;s Waldo</title>\n\t\t\t</head>\n\t\t\t<body className=\"flex min-h-screen flex-col bg-slate-700 text-slate-100\">\n\t\t\t\t{children}\n\t\t\t\t<ToastContainer\n\t\t\t\t\tposition=\"top-center\"\n\t\t\t\t\tautoClose={5000}\n\t\t\t\t\thideProgressBar={false}\n\t\t\t\t\tnewestOnTop={true}\n\t\t\t\t\tcloseOnClick\n\t\t\t\t\trtl={false}\n\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t/>\n\t\t\t</body>\n\t\t</html>\n\t);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAOO,MAAM,WAAqB;IACjC,OAAO;IACP,aAAa;AACd;AAEe,SAAS,WAAW,EAClC,QAAQ,EAGP;IACD,qBACC,mPAAC;QAAK,MAAK;;0BACV,mPAAC;0BACA,cAAA,mPAAC;8BAAM;;;;;;;;;;;0BAER,mPAAC;gBAAK,WAAU;;oBACd;kCACD;wBACC,UAAS;wBACT,WAAW;wBACX,iBAAiB;wBACjB,aAAa;wBACb,YAAY;wBACZ,KAAK;wBACL,OAAM;;;;;;;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/db.ts"],"sourcesContent":["import mongoose, {\n\tFlattenMaps,\n\tGetLeanResultType,\n\tHydratedDocument,\n\tInferSchemaType,\n\tModel,\n\tObtainSchemaGeneric,\n\tQueryWithHelpers,\n\tRequire_id,\n\tSchema,\n} from \"mongoose\";\n\nexport type GetModel<TSchema extends Schema> = Model<\n\tInferSchemaType<TSchema>,\n\tObtainSchemaGeneric<TSchema, \"TQueryHelpers\">,\n\tObtainSchemaGeneric<TSchema, \"TInstanceMethods\">,\n\tObtainSchemaGeneric<TSchema, \"TVirtuals\">,\n\tHydratedDocument<\n\t\tInferSchemaType<TSchema>,\n\t\tObtainSchemaGeneric<TSchema, \"TVirtuals\"> &\n\t\t\tObtainSchemaGeneric<TSchema, \"TInstanceMethods\">,\n\t\tObtainSchemaGeneric<TSchema, \"TQueryHelpers\">\n\t>,\n\tTSchema\n> &\n\tObtainSchemaGeneric<TSchema, \"TStaticMethods\">;\n\nexport type DocType<TSchema> = FlattenMaps<InferSchemaType<TSchema>>;\n\nexport default async function dbConnect() {\n\tconst MONGODB_URL = process.env.MONGODB_URL;\n\tif (!MONGODB_URL) {\n\t\tthrow new Error(\"Missing MONGODB_URL env variable\");\n\t}\n\tconst conn = await mongoose.connect(process.env.MONGODB_URL);\n\tconn.connection.once(\"connected\", () =>\n\t\tconsole.log(`connect to database success`),\n\t);\n\tconn.connection.once(\"close\", () =>\n\t\tconsole.log(`closed connection to database`),\n\t);\n}\n"],"names":[],"mappings":";;;;;;AA6Be,eAAe;IAC7B,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;IAC3C,IAAI,CAAC,aAAa;QACjB,MAAM,IAAI,MAAM;IACjB;IACA,MAAM,OAAO,MAAM,6CAAS,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;IAC3D,KAAK,UAAU,CAAC,IAAI,CAAC,aAAa,IACjC,QAAQ,GAAG,CAAC,CAAC,2BAA2B,CAAC;IAE1C,KAAK,UAAU,CAAC,IAAI,CAAC,SAAS,IAC7B,QAAQ,GAAG,CAAC,CAAC,6BAA6B,CAAC;AAE7C"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/models/Board.ts"],"sourcesContent":["import { InferSchemaType, Model, Schema, model, models } from \"mongoose\";\nimport { DocType } from \"../db\";\n\nexport const CoordinatesSchema = new Schema(\n\t{\n\t\tx: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\ty: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\t{ id: false, _id: false },\n);\n\nexport type Coordinates = InferSchemaType<typeof CoordinatesSchema>;\n\nexport const BoardItemSchema = new Schema({\n\tname: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tcoordinates: {\n\t\ttype: CoordinatesSchema,\n\t\trequired: true,\n\t},\n\tdistance: {\n\t\ttype: Number,\n\t\tdefault: 0,\n\t},\n\timage: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tpinpoint: CoordinatesSchema,\n\tfound: Boolean,\n});\n\nexport const BoardSchema = new Schema(\n\t{\n\t\tname: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tdesc: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\timage: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\theight: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\twidth: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\titems: [BoardItemSchema],\n\t},\n\t{\n\t\tvirtuals: {},\n\t\ttimestamps: true,\n\t},\n);\n\nexport default (models?.Boards as Model<InferSchemaType<typeof BoardSchema>>) ||\n\tmodel(\"Boards\", BoardSchema);\n\nexport type BoardModel = DocType<typeof BoardSchema> & { _id: string };\nexport type BoardItemModel = BoardModel[\"items\"][0];\n"],"names":[],"mappings":";;;;;;;;;AAGO,MAAM,oBAAoB,gDAChC;IACC,GAAG;QACF,MAAM;QACN,UAAU;IACX;IACA,GAAG;QACF,MAAM;QACN,UAAU;IACX;AACD,GACA;IAAE,IAAI;IAAO,KAAK;AAAM;AAKlB,MAAM,kBAAkB,gDAAW;IACzC,MAAM;QACL,MAAM;QACN,UAAU;IACX;IACA,aAAa;QACZ,MAAM;QACN,UAAU;IACX;IACA,UAAU;QACT,MAAM;QACN,SAAS;IACV;IACA,OAAO;QACN,MAAM;QACN,UAAU;IACX;IACA,UAAU;IACV,OAAO;AACR;AAEO,MAAM,cAAc,gDAC1B;IACC,MAAM;QACL,MAAM;QACN,UAAU;IACX;IACA,MAAM;QACL,MAAM;QACN,UAAU;IACX;IACA,OAAO;QACN,MAAM;QACN,UAAU;IACX;IACA,QAAQ;QACP,MAAM;QACN,UAAU;IACX;IACA,OAAO;QACN,MAAM;QACN,UAAU;IACX;IACA,OAAO;QAAC;KAAgB;AACzB,GACA;IACC,UAAU,CAAC;IACX,YAAY;AACb;uCAGc,6CAAS,UACvB,2CAAM,UAAU"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/models/GameSession.ts"],"sourcesContent":["import { InferSchemaType, Model, Schema, model, models } from \"mongoose\";\nimport { BoardSchema } from \"./Board\";\nimport { DocType } from \"../db\";\n\nexport const GameSessionTimestampSchema = new Schema(\n\t{\n\t\ttime_start: Date,\n\t\ttime_paused: Date,\n\t},\n\t{ _id: false },\n);\n\nexport const GameSessionSchema = new Schema(\n\t{\n\t\tname: String,\n\t\tboard: {\n\t\t\ttype: BoardSchema,\n\t\t\trequired: true,\n\t\t},\n\t\ttimestamps: [GameSessionTimestampSchema],\n\t\ttime_finished: Number,\n\t},\n\t{ timestamps: true },\n);\n\nexport default (models?.GameSessions as Model<\n\tInferSchemaType<typeof GameSessionSchema>\n>) || model(\"GameSessions\", GameSessionSchema);\n\nexport type GameSessionModel = DocType<typeof GameSessionSchema> & {\n\t_id: string;\n};\nexport type GameSessionTimestampsModel = DocType<\n\ttypeof GameSessionTimestampSchema\n>;\n"],"names":[],"mappings":";;;;;;;;;;AAIO,MAAM,6BAA6B,gDACzC;IACC,YAAY;IACZ,aAAa;AACd,GACA;IAAE,KAAK;AAAM;AAGP,MAAM,oBAAoB,gDAChC;IACC,MAAM;IACN,OAAO;QACN,IAAI;QACJ,UAAU;IACX;IACA,YAAY;QAAC;KAA2B;IACxC,eAAe;AAChB,GACA;IAAE,YAAY;AAAK;uCAGL,6CAAS,gBAElB,2CAAM,gBAAgB"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/helper.ts"],"sourcesContent":["import { Coordinates } from \"@/lib/models/Board\";\nimport { GameSessionTimestampSchema } from \"@/lib/models/GameSession\";\nimport clsx, { ClassValue } from \"clsx\";\nimport { differenceInMilliseconds } from \"date-fns\";\nimport { InferSchemaType } from \"mongoose\";\nimport { Context, useContext } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function calculateDistance(\n\tpinpoint: Coordinates,\n\tcoordinates: Coordinates,\n) {\n\treturn Math.sqrt(\n\t\tMath.pow(pinpoint.x - coordinates.x, 2) +\n\t\t\tMath.pow(pinpoint.y - coordinates.y, 2),\n\t);\n}\n\nexport function cn(...classValues: ClassValue[]) {\n\treturn twMerge(clsx(...classValues));\n}\n\nexport function getContext<T>(context: Context<T>) {\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\tconst contextValue = useContext(context);\n\tif (!contextValue) {\n\t\tthrow new Error(`Component must be used inside ${context}`);\n\t}\n\treturn contextValue;\n}\n\nexport function formatTimer(timer: number) {\n\tlet milliseconds = timer % 1000;\n\tlet seconds = Math.floor(timer / 1000);\n\tlet minutes = Math.floor(seconds / 60);\n\tlet hours = Math.floor(minutes / 60);\n\n\tseconds = seconds % 60;\n\tminutes = minutes % 60;\n\n\tlet result = \"\";\n\tif (hours != 0) result += `${hours} hours and `;\n\n\tif (minutes != 0) result += `${minutes} minutes and `;\n\n\tresult += `${seconds}.`;\n\tresult +=\n\t\tmilliseconds > 0\n\t\t\t? milliseconds > 9\n\t\t\t\t? milliseconds > 99\n\t\t\t\t\t? `${milliseconds}`.slice(0, 3)\n\t\t\t\t\t: `0${milliseconds}`.slice(0, 3)\n\t\t\t\t: `00${milliseconds}`.slice(0, 3)\n\t\t\t: \"000\";\n\n\treturn `${result} seconds`;\n}\n\nexport function getTotalTime(\n\ttimestamps: InferSchemaType<typeof GameSessionTimestampSchema>[],\n) {\n\tlet total_time = timestamps.reduce((total, { time_start, time_paused }) => {\n\t\tif (!time_paused || !time_start) return total;\n\t\treturn total + differenceInMilliseconds(time_paused, time_start);\n\t}, 0);\n\tconst last_timestamp = timestamps[timestamps.length - 1];\n\n\tif (last_timestamp && !last_timestamp.time_paused)\n\t\ttotal_time += differenceInMilliseconds(\n\t\t\tDate.now(),\n\t\t\tlast_timestamp.time_start!,\n\t\t);\n\treturn total_time;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAQO,SAAS,kBACf,QAAqB,EACrB,WAAwB;IAExB,OAAO,KAAK,IAAI,CACf,KAAK,GAAG,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,EAAE,KACpC,KAAK,GAAG,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,EAAE;AAExC;AAEO,SAAS,GAAG,GAAG,WAAyB;IAC9C,OAAO,uKAAQ,oJAAQ;AACxB;AAEO,SAAS,WAAc,OAAmB;IAChD,sDAAsD;IACtD,MAAM,eAAe,8NAAW;IAChC,IAAI,CAAC,cAAc;QAClB,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,QAAQ,CAAC;IAC3D;IACA,OAAO;AACR;AAEO,SAAS,YAAY,KAAa;IACxC,IAAI,eAAe,QAAQ;IAC3B,IAAI,UAAU,KAAK,KAAK,CAAC,QAAQ;IACjC,IAAI,UAAU,KAAK,KAAK,CAAC,UAAU;IACnC,IAAI,QAAQ,KAAK,KAAK,CAAC,UAAU;IAEjC,UAAU,UAAU;IACpB,UAAU,UAAU;IAEpB,IAAI,SAAS;IACb,IAAI,SAAS,GAAG,UAAU,CAAC,EAAE,MAAM,WAAW,CAAC;IAE/C,IAAI,WAAW,GAAG,UAAU,CAAC,EAAE,QAAQ,aAAa,CAAC;IAErD,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;IACvB,UACC,eAAe,IACZ,eAAe,IACd,eAAe,KACd,CAAC,EAAE,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,KAC3B,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,KAC7B,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,KAC9B;IAEJ,OAAO,CAAC,EAAE,OAAO,QAAQ,CAAC;AAC3B;AAEO,SAAS,aACf,UAAgE;IAEhE,IAAI,aAAa,WAAW,MAAM,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE;QACrE,IAAI,CAAC,eAAe,CAAC,YAAY,OAAO;QACxC,OAAO,QAAQ,qLAAyB,aAAa;IACtD,GAAG;IACH,MAAM,iBAAiB,UAAU,CAAC,WAAW,MAAM,GAAG,EAAE;IAExD,IAAI,kBAAkB,CAAC,eAAe,WAAW,EAChD,cAAc,qLACb,KAAK,GAAG,IACR,eAAe,UAAU;IAE3B,OAAO;AACR"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport dbConnect from \"@/lib/db\";\nimport Board, { BoardItemSchema, Coordinates } from \"@/lib/models/Board\";\nimport GameSession, {\n\tGameSessionModel,\n\tGameSessionSchema,\n} from \"@/lib/models/GameSession\";\nimport { calculateDistance, getTotalTime } from \"@/utils/helper\";\nimport { InferSchemaType } from \"mongoose\";\nimport { revalidatePath } from \"next/cache\";\n\nexport type ResponseStatus = \"success\" | \"fail\" | \"error\";\nexport type Response<T> = T & {\n\tmessage: string;\n\tstatus: ResponseStatus;\n};\n\nexport async function pinpointCoordinates(\n\tsession_id: string,\n\titem_id: string,\n\tpinpoint: Coordinates,\n): Promise<\n\tResponse<{\n\t\tfinished?: boolean;\n\t\tfound?: boolean;\n\t}>\n> {\n\tawait dbConnect();\n\tconst session = await GameSession.findById(session_id);\n\tif (!session) {\n\t\treturn { message: \"Game Session cannot be found.\", status: \"error\" };\n\t}\n\n\tconst item = session.board.items.find((item) => item.id === item_id);\n\tif (item === undefined) {\n\t\treturn {\n\t\t\tmessage: `Item with id ${item_id} does not belong to current game.`,\n\t\t\tstatus: \"error\",\n\t\t};\n\t}\n\n\tif (session.time_finished) {\n\t\treturn { message: \"Game Session already finished.\", status: \"error\" };\n\t}\n\n\titem.pinpoint = pinpoint;\n\titem.found = calculateDistance(pinpoint, item.coordinates) <= item.distance;\n\t// __AUTO_GENERATED_PRINT_VAR_START__\n\tconsole.log(item.distance); // __AUTO_GENERATED_PRINT_VAR_END__\n\n\tawait session.save();\n\n\tif (!session.board.items[session.board.items.indexOf(item)].found) {\n\t\treturn {\n\t\t\tmessage: `${item.name} cannot be found in that area.`,\n\t\t\tstatus: \"fail\",\n\t\t\tfound: false,\n\t\t};\n\t}\n\n\tconst is_finished = session.board.items.every(({ found }) => found);\n\tif (is_finished) {\n\t\tsession.time_finished = getTotalTime(session.timestamps);\n\t\tawait session.save();\n\t\trevalidatePath(\"\");\n\t\treturn {\n\t\t\tfinished: true,\n\t\t\tmessage: \"Congratulations, you found all of them!\",\n\t\t\tstatus: \"success\",\n\t\t\tfound: true,\n\t\t};\n\t}\n\n\trevalidatePath(\"\");\n\n\treturn {\n\t\tmessage: `You found ${item.name}`,\n\t\tstatus: \"success\",\n\t\tfound: true,\n\t};\n}\n\nexport async function createGameSession(\n\tboardId: string,\n): Promise<Response<{ session_id?: string }>> {\n\tawait dbConnect();\n\tconst board = await Board.findById(boardId);\n\n\tif (!board) {\n\t\treturn { message: \"\", status: \"error\" };\n\t}\n\tlet items: InferSchemaType<typeof BoardItemSchema>[] = [];\n\tfor (let i = 0; i < 3; i++) {\n\t\tif (board.items.length === 0) break;\n\n\t\tconst j = Math.floor(Math.random() * board.items.length);\n\t\titems.push(board.items[j]);\n\t\tboard.items.splice(j, 1);\n\t}\n\tboard.items = items as typeof board.items;\n\n\tconst session = await GameSession.create({\n\t\tboard,\n\t});\n\n\treturn {\n\t\tsession_id: session.id,\n\t\tmessage: \"Session created\",\n\t\tstatus: \"success\",\n\t};\n}\n\nexport async function startGameSession(session_id: string) {\n\tawait dbConnect();\n\tconst session = await GameSession.findById(session_id);\n\tif (!session) return { message: \"Session cannot be found.\", status: \"error\" };\n\n\tconst last_timestamp = session.timestamps[session.timestamps.length - 1];\n\tif (last_timestamp && !last_timestamp.time_paused)\n\t\treturn {\n\t\t\tmessage:\n\t\t\t\t\"Session has not been paused last session. Continuing last session.\",\n\t\t\tstatus: \"error\",\n\t\t};\n\n\ttry {\n\t\tsession.timestamps.push({ time_start: new Date() });\n\t\tsession.save();\n\t\treturn {\n\t\t\ttotal_time: getTotalTime(session.timestamps),\n\t\t\tmessage: \"Game Session started.\",\n\t\t\tstatus: \"success\",\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tmessage: \"Unable to start session.\",\n\t\t\tstatus: \"error\",\n\t\t};\n\t}\n}\n\nexport async function pauseGameSession(session_id: string) {\n\tawait dbConnect();\n\tconst session = await GameSession.findById(session_id);\n\tif (!session) return { message: \"Session cannot be found.\", status: \"error\" };\n\n\tconst last_timestamp = session.timestamps[session.timestamps.length - 1];\n\tif (!last_timestamp)\n\t\treturn { message: \"Session has no timestamps yet.\", status: \"error\" };\n\ttry {\n\t\tlast_timestamp.time_paused = new Date();\n\t\tsession.save();\n\t\treturn {\n\t\t\ttotal_time: getTotalTime(session.timestamps),\n\t\t\tmessage: \"Game Session paused.\",\n\t\t\tstatus: \"success\",\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tmessage: \"Unable to pause session.\",\n\t\t\tstatus: \"error\",\n\t\t};\n\t}\n}\n\nexport type LeaderboardItem = {\n\tname?: string | null;\n\ttime_finished: number;\n};\nexport async function getAllLeaderboards(\n\tboardId: string,\n\tpage: number,\n): Promise<Response<{ scores?: LeaderboardItem[] }>> {\n\ttry {\n\t\tawait dbConnect();\n\n\t\tconst board = await Board.findById(boardId);\n\t\tif (!board) {\n\t\t\treturn { message: \"Unable to find board\", status: \"error\" };\n\t\t}\n\n\t\tconst scores = await GameSession.find({ time_finished: { $ne: null } })\n\t\t\t.select({ time_finished: 1, name: 1 })\n\t\t\t.sort({ time_finished: 1 })\n\t\t\t.skip((page - 1) * 30)\n\t\t\t.limit(30);\n\n\t\treturn {\n\t\t\tscores: scores as LeaderboardItem[],\n\t\t\tstatus: \"success\",\n\t\t\tmessage: \"Scores fetched successfully.\",\n\t\t};\n\t} catch (error) {\n\t\tconsole.log(error);\n\t\treturn { message: \"Unable to find game sessions\", status: \"error\" };\n\t}\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/GameBoard.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BoardDropdown = registerClientReference(\n    function() { throw new Error(\"Attempted to call BoardDropdown() from the server but BoardDropdown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GameBoard.tsx\",\n    \"BoardDropdown\",\n);\nexport const BoardItemFoundPin = registerClientReference(\n    function() { throw new Error(\"Attempted to call BoardItemFoundPin() from the server but BoardItemFoundPin is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GameBoard.tsx\",\n    \"BoardItemFoundPin\",\n);\nexport const DropdownSelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownSelectItem() from the server but DropdownSelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GameBoard.tsx\",\n    \"DropdownSelectItem\",\n);\nexport const DropdownSelectList = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownSelectList() from the server but DropdownSelectList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GameBoard.tsx\",\n    \"DropdownSelectList\",\n);\nexport const GameBoard = registerClientReference(\n    function() { throw new Error(\"Attempted to call GameBoard() from the server but GameBoard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GameBoard.tsx\",\n    \"GameBoard\",\n);\nexport const GameBoardTimer = registerClientReference(\n    function() { throw new Error(\"Attempted to call GameBoardTimer() from the server but GameBoardTimer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GameBoard.tsx\",\n    \"GameBoardTimer\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0CACA;AAEG,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0CACA;AAEG,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0CACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0CACA;AAEG,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA"}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/Header.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Header.tsx\",\n    \"Header\",\n);\nexport const LeaderboardContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call LeaderboardContext() from the server but LeaderboardContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Header.tsx\",\n    \"LeaderboardContext\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,uCACA;AAEG,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,uCACA"}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/game/[gameId]/page.tsx"],"sourcesContent":["import { startGameSession } from \"@/app/actions\";\nimport { GameBoard } from \"@/components/GameBoard\";\nimport { Header } from \"@/components/Header\";\nimport dbConnect from \"@/lib/db\";\nimport { BoardModel } from \"@/lib/models/Board\";\nimport GameSession, { GameSessionModel } from \"@/lib/models/GameSession\";\n\nexport default async function BoardGame({\n\tparams: { gameId },\n}: {\n\tparams: { gameId: string };\n}) {\n\tawait dbConnect();\n\n\tconst session = await GameSession.findById(gameId, {\n\t\t\"board.items.coordinates\": 0,\n\t});\n\tif (!session) return <div>Unable to find game session.</div>;\n\tawait startGameSession(session.id);\n\n\tconst serverSession = session.toJSON({\n\t\tflattenMaps: true,\n\t\tflattenObjectIds: true,\n\t}) as GameSessionModel;\n\n\treturn (\n\t\t<>\n\t\t\t<Header board={serverSession.board as BoardModel} />\n\t\t\t<main className=\"flex items-center justify-center\">\n\t\t\t\t<GameBoard\n\t\t\t\t\tboard={serverSession.board as BoardModel}\n\t\t\t\t\tsession={serverSession}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAOe,eAAe,UAAU,EACvC,QAAQ,EAAE,MAAM,EAAE,EAGlB;IACA,MAAM;IAEN,MAAM,UAAU,MAAM,+IAAY,QAAQ,CAAC,QAAQ;QAClD,2BAA2B;IAC5B;IACA,IAAI,CAAC,SAAS,qBAAO,mPAAC;kBAAI;;;;;;IAC1B,MAAM,0IAAiB,QAAQ,EAAE;IAEjC,MAAM,gBAAgB,QAAQ,MAAM,CAAC;QACpC,aAAa;QACb,kBAAkB;IACnB;IAEA,qBACC;;0BACC;gBAAQ,OAAO,cAAc,KAAK;;;;;;0BAClC,mPAAC;gBAAK,WAAU;0BACf,cAAA;oBACC,OAAO,cAAc,KAAK;oBAC1B,SAAS;;;;;;;;;;;;;AAKd"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/game/[gameId]/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '0e7957259bf924530b94939be87f7851c9b57713': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['getAllLeaderboards'])(...args)),\n  'a2f38eb535be5bbbf689c07c98dd210ed00cf286': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['createGameSession'])(...args)),\n  'd5e6798aa55f793305e00e33f1db8d5236eb3fb9': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['pauseGameSession'])(...args)),\n  'f72ddebb5da4df74781f6cc6757a86c980b8f9e9': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['pinpointCoordinates'])(...args)),\n  'fac60cb6b51ca3c202ebe2ef4a71d8ceaec506c8': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['startGameSession'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,CAAC,8EAA4B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,qBAAqB,KAAK;IACnJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,CAAC,8EAA4B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,oBAAoB,KAAK;IAClJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,CAAC,8EAA4B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,mBAAmB,KAAK;IACjJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,CAAC,8EAA4B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,sBAAsB,KAAK;IACpJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,CAAC,8EAA4B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,mBAAmB,KAAK;AACnJ"}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}